- edit = model && !model[:id].nil?
%form{method: 'post', action: url(edit ? "/places/#{model[:id]}/edit" : '/places')}
  %input{type: 'hidden', name: '_method', value: edit ? 'put' : 'post'}
  .mb-3
    %label.form-label{for: 'type'} Type
    %select.form-select#type{name: 'type', class: [bs_invalid_class(model, :type)]}
      %option{value: 'Plop', selected: model[:type] == 'Plop'} Plop
      %option{value: 'H', selected: model[:type] == 'H'} House
      %option{value: 'T3', selected: model[:type] == 'T3'} T3
      %option{value: 'T4', selected: model[:type] == 'T4'} T4
    = bs_invalid_feedbacks(model, :type)
  .mb-3
    %label.form-label{for: 'title'} Title
    %input.form-control#title{type: 'text', name: 'title', value: h(model[:title])}
  .mb-3
    %label.form-label{for: 'surface'} Surface
    %input.form-control#surface{type: 'text', name: 'surface', value: h(model[:surface])}
  .mb-3
    %label.form-label{for: 'price'} Price
    %input.form-control#price{type: 'text', name: 'price', value: h(model[:price])}
  .mb-3
    %label.form-label{for: 'description'} Description
    %textarea.form-control#description{name: 'description'}
      = h(model[:description])
  .mb-3
    %label.form-label{for: 'url'} URL
    %input.form-control#url{type: 'text', name: 'url', class: [bs_invalid_class(model, :url)], value: h(model[:url])}
    = bs_invalid_feedbacks(model, :url)
  .form-check.mb-3
    %label.form-label{for: 'sold'} Sold
    %input.form-check-input#sold{type: 'checkbox', name: 'sold', checked: !model[:sold].nil? && model[:sold].to_b}
  .form-check.mb-3
    %label.form-label{for: 'future'} In construction
    %input.form-check-input#future{type: 'checkbox', name: 'future', checked: !model[:future].nil? && model[:future].to_b}
  %button.btn.btn-primary{type: 'submit'} Submit
