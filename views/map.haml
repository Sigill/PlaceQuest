#map.position-absolute.top-0.h-100.compact
#places-app{'v-cloak': 'v-cloak'}
  #sidebar.position-absolute.start-0.top-0.h-100.compact
    .tools.mx-1.mt-1.d-grid.gap-1
      %button.btn.btn-no-focus{type: 'button', '@Click' => 'toggleDepositMode();', ':class' => '{"btn-primary": mode == "depositPlace", "btn-secondary": mode != "depositPlace"}'}
        %span.material-icons.material-icon-link{style: 'vertical-align: middle;'} {{ mode == "depositPlace" ? 'cancel' : 'add_location_alt' }}
        {{ mode == "depositPlace" ? 'Click on the map or cancel' : 'Create new place' }}
      %button.btn.btn-no-focus{type: 'button', '@Click' => 'toggleMovable();', ':class' => '{"btn-primary": mode == "editLocation", "btn-secondary": mode != "editLocation"}'}
        %span.material-icons.material-icon-link{style: 'vertical-align: middle;'} {{ mode == "editLocation" ? 'cancel' : 'zoom_out_map' }}
        {{ mode == "editLocation" ? 'Disable location edition' : 'Enable location edition' }}

    %ul.list-group.list-group-flush.overflow-auto
      %li.list-group-item{'v-for' => 'e in places', ':key' => 'e.id', ':class' => '{"list-group-item-primary": e.selected}'}
        .form-check.d-inline-block{'@click' => 'selectedPlace = e'}
          %input.form-check-input{type: 'checkbox', v: {model: 'e.visible'}, '@change' => 'placeVisibilityChanged(e)'}
          %span.form-check-label {{ title(e) }}
        %a.material-icons.material-icons-link.float-end{'@Click' => 'edit(e)'} edit

  #sidebar-control.position-absolute.top-0.compact
    %button#compact_btn.btn.material-icons.btn-no-focus.d-block{'@click' => 'toggleCompactSidebar()', ':class' => '{"btn-primary": sidebarMode == "compact"}'} list
    %button#compact_btn.btn.material-icons.btn-no-focus.d-block{'@click' => 'toggleExpandedSidebar()', ':class' => '{"btn-primary": sidebarMode == "expanded"}'} view_list

  #placeEditModal.modal.fade{aria: {labelledby: 'placeEditModalLabel', hidden: 'true'}}
    .modal-dialog.modal-fullscreen
      .modal-content
        %form
          .modal-header
            %h5.modal-title Edit place
            %button.btn-close{type: 'button', 'aria-label' => 'close', '@click' => 'discardForm()'}
          .modal-body
            .mb-3
              %label.form-label{for: 'type'} Type
              %select.form-select#type{name: 'type', 'v-model' => 'formModel.type_id'}
                %option{'v-for' => 't in place_types', ':value' => 't.id'} {{ t.name }}
            .mb-3
              %label.form-label{for: 'title'} Title
              %input.form-control#title{type: 'text', name: 'title', 'v-model' => 'formModel.title'}
            .mb-3
              %label.form-label{for: 'surface'} Surface
              %input.form-control#surface{type: 'text', name: 'surface', 'v-model.number' => 'formModel.surface'}
            .mb-3
              %label.form-label{for: 'price'} Price
              %input.form-control#price{type: 'text', name: 'price', 'v-model.number' => 'formModel.price'}
            .mb-3
              %label.form-label{for: 'description'} Description
              %textarea.form-control#description{name: 'description', 'v-model' => 'formModel.description'}
            .mb-3
              %label.form-label{for: 'url'} URL
              %input.form-control#url{type: 'text', name: 'url', 'v-model' => 'formModel.url'}
            .form-check.mb-3
              %label.form-label{for: 'sold'} Sold
              %input.form-check-input#sold{type: 'checkbox', name: 'sold', 'v-model' => 'formModel.sold'}
            .form-check.mb-3
              %label.form-label{for: 'future'} In construction
              %input.form-check-input#future{type: 'checkbox', name: 'future', 'v-model' => 'formModel.future'}
          .modal-footer
            %button.btn.btn-secondary{type: 'button', '@click' => 'discardForm()'} Cancel
            %button.btn.btn-primary{type: 'button', '@click' => 'commit()'} Save
